1. 无状态对象的自身设计带来的线程安全性
    Spring管理的大多数对象，比如我们常用的 controller、service、dao 等都是一些无状态对象，这种对象不会因为多线程而导致状态
被破坏。因为它们没有局部变量，没有自身状态，自然也就不会因为多个线程的交替调度而破坏自身状态导致线程安全的问题。这是这些bean自身
的设计带来的线程安全。我们也可以理解为 Immutable 对象带来的线程安全性。


2. 通过 TreadLocal 工具类来实现线程安全
    ThreadLocal 是一个为线程提供线程局部变量的工具类，它的思想也十分简单，就是为线程提供一个线程私有变量副本，这样多个线程都
可以随便更改自己线程局部的变量，不会影响到其它线程。


3. ThreadLocal 内存泄漏？
    为了防止 ThreadLocal 的内存泄漏问题，我们必须在每次使用完 ThreadLocal 后调用 remove() 来清理无用的 Entry